#配置分库分表
spring:
  shardingsphere:
    props:
      sql.show: true # 开启SQL显示，默认值: false
      executor.size: 2 #工作线程数量，默认值: CPU核数
    #配置数据源
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://10.45.50.241:3308/ds0
        username: root
        password: root
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://10.45.50.241:3308/ds1
        username: root
        password: root

    sharding:
      tables:
        order:
          actual-data-nodes: ds$->{0..1}.order$->{0..1}
          databse-strategy:
            #配置order表分库策略（inline-基于行表达式的分片算法）
#            inline:
#              sharding-column: order_id
#              algorithm-expression: order$->{order_id % 2}
            #配置order表分库策略（standard-基于的标准分片算法）
            standard:
              sharding-column: order_id
              precise-algorithm-class-name: com.cp3.shardingsphere.utils.OrderDataBasesPreciseShardingAlgorithm
          table-strategy:
#            #配置order表分库策略（inline-基于行表达式的分片算法）
#            inline:
#              sharding-column: order_no
#              algorithm-expression: order$->{order_no % 2}
            #配置order表分库策略（standard-基于的标准分片算法）
            standard:
              sharding-column: order_no
              precise-algorithm-class-name: com.cp3.shardingsphere.utils.OrderTablesPreciseShardingAlgorithm




